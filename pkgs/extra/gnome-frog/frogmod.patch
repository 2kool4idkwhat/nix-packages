diff --git a/data/ui/extracted_page.blp b/data/ui/extracted_page.blp
index b3159e0..dfcbfbb 100644
--- a/data/ui/extracted_page.blp
+++ b/data/ui/extracted_page.blp
@@ -60,23 +60,6 @@ template $ExtractedPage : Adw.NavigationPage {
         tooltip-text: C_("Extracted screen", "Open menu");
         menu-model: primary_menu;
       }
-
-      [end]
-      MenuButton share_button {
-        icon-name: "emblem-shared-symbolic";
-        tooltip-text: C_("Extracted screen", "Share To");
-        popover: Popover {
-
-          styles ["menu"]
-
-          child: ListBox share_list_box {
-            margin-end: 4;
-            margin-top: 4;
-            margin-start: 4;
-            margin-bottom: 4;
-          };
-        };
-      }
     }
 
     ScrolledWindow text_scrollview {
diff --git a/data/ui/preferences_general.blp b/data/ui/preferences_general.blp
index 62f688b..28b229e 100644
--- a/data/ui/preferences_general.blp
+++ b/data/ui/preferences_general.blp
@@ -42,18 +42,4 @@ template $PreferencesGeneralPage : Adw.PreferencesPage {
     }
   }
 
-  Adw.PreferencesGroup {
-    title: _("Telemetry");
-
-    Adw.ActionRow {
-      title: _("Collect analytics");
-      use-underline: true;
-      subtitle: _("Allow anonymous analytics.");
-      activatable-widget: telemetry_switch;
-
-      Switch telemetry_switch {
-        valign: center;
-      }
-    }
-  }
 }
diff --git a/data/ui/welcome_page.blp b/data/ui/welcome_page.blp
index 9c6075d..77a7c36 100644
--- a/data/ui/welcome_page.blp
+++ b/data/ui/welcome_page.blp
@@ -147,13 +147,6 @@ menu primary_menu {
     }
   }
 
-  section {
-    item {
-      label: _("⭐ Star on GitHub");
-      action: "app.github_star";
-      icon: "starred-symbolic";
-    }
-  }
 }
 
 menu grab_menu {
diff --git a/frog/main.py b/frog/main.py
index 1dc33be..4a0b2ec 100644
--- a/frog/main.py
+++ b/frog/main.py
@@ -30,7 +30,6 @@ import datetime
 import sys
 from gettext import gettext as _
 
-import nanoid
 from gi.repository import Gtk, Gio, GLib, Notify, Adw, GdkPixbuf, Gdk, GObject
 from loguru import logger
 
@@ -38,7 +37,6 @@ from frog.config import RESOURCE_PREFIX, APP_ID
 from frog.language_manager import language_manager
 from frog.services.clipboard_service import clipboard_service
 from frog.services.screenshot_service import ScreenshotService
-from frog.services.telemetry import telemetry
 from frog.settings import Settings
 from frog.window import FrogWindow
 
@@ -48,7 +46,6 @@ class FrogApplication(Adw.Application):
     gtk_settings: Gtk.Settings
 
     settings: Settings = GObject.Property(type=GObject.TYPE_PYOBJECT)
-    installation_id: str = GObject.Property(type=str)
 
     def __init__(self, version=None):
         super().__init__(application_id=APP_ID,
@@ -59,9 +56,6 @@ class FrogApplication(Adw.Application):
         # Init GSettings
         self.settings = Settings.new()
 
-        telemetry.set_is_active(self.settings.get_boolean('telemetry'))
-        self.ensure_installation_id()
-
         self.add_main_option(
             'extract_to_clipboard',
             ord('e'),
@@ -130,39 +124,18 @@ class FrogApplication(Adw.Application):
         self.activate()
         return 0
 
-    def ensure_installation_id(self):
-        self.installation_id = self.settings.get_string("installation-id")
-        if not self.installation_id:
-            logger.info("No installation id was found. Generating a new one.")
-            self.installation_id = nanoid.generate()
-            self.settings.set_string("installation-id", self.installation_id)
-            telemetry.set_installation_id(self.installation_id)
-            telemetry.capture('new Installation ID generated')
-
-        telemetry.set_installation_id(self.installation_id)
-
     def on_settings_changed(self, settings, key):
         logger.debug('SETTINGS: %s changed', key)
-        if key == "telemetry":
-            value = settings.get_boolean(key)
-            if value:
-                telemetry.capture('telemetry activated')
-            else:
-                telemetry.capture('telemetry deactivated')
-            telemetry.set_is_active(value)
 
     def on_preferences(self, _action, _param) -> None:
-        telemetry.capture('preferences activated')
         self.get_active_window().show_preferences()
 
     def on_github_star(self, _action, _param) -> None:
-        telemetry.capture('star github activated')
         launcher: Gtk.UriLauncher = Gtk.UriLauncher()
         launcher.set_uri('https://github.com/TenderOwl/Frog')
         launcher.launch(callback=self._on_github_star)
 
     def on_about(self, _action, _param):
-        telemetry.capture('about activated')
         about_window = Adw.AboutDialog(
             application_name="Frog",
             application_icon=APP_ID,
@@ -188,34 +161,27 @@ class FrogApplication(Adw.Application):
         about_window.present(self.props.active_window)
 
     def on_shortcuts(self, _action, _param):
-        telemetry.capture('shortcuts activated')
         builder = Gtk.Builder()
         builder.add_from_resource(f"{RESOURCE_PREFIX}/ui/shortcuts.ui")
         builder.get_object("shortcuts").set_transient_for(self.get_active_window())
         builder.get_object("shortcuts").present()
 
     def on_copy_to_clipboard(self, _action, _param) -> None:
-        telemetry.capture('copy_to_clipboard activated')
         self.get_active_window().on_copy_to_clipboard(self)
 
     def on_show_uri(self, _action, param) -> None:
-        telemetry.capture('show_uri activated')
         Gtk.show_uri(None, param.get_string(), Gdk.CURRENT_TIME)
 
     def get_screenshot(self, _action, _param) -> None:
-        telemetry.capture('screenshot activated')
         self.get_active_window().get_screenshot()
 
     def get_screenshot_and_copy(self, _action, _param) -> None:
-        telemetry.capture('screenshot_and_copy activated')
         self.get_active_window().get_screenshot(copy=True)
 
     def open_image(self, _action, _param) -> None:
-        telemetry.capture('open_image activated')
         self.get_active_window().open_image()
 
     def on_paste_from_clipboard(self, _action, _param) -> None:
-        telemetry.capture('paste_from_clipboard activated')
         self.get_active_window().on_paste_from_clipboard(self)
 
     @staticmethod
diff --git a/frog/services/clipboard_service.py b/frog/services/clipboard_service.py
index 1e4c4cc..09f4b12 100644
--- a/frog/services/clipboard_service.py
+++ b/frog/services/clipboard_service.py
@@ -31,8 +31,6 @@ from gettext import gettext as _
 from gi.repository import Gdk, GObject, Gio
 from loguru import logger
 
-from frog.services.telemetry import telemetry
-
 
 class ClipboardService(GObject.GObject):
     __gtype_name__ = 'ClipboardService'
@@ -49,7 +47,6 @@ class ClipboardService(GObject.GObject):
 
     def set(self, value: str) -> None:
         self.clipboard.set(value)
-        telemetry.capture('clipboard set')
 
     def _on_read_texture(self, _sender: GObject.GObject, result: Gio.AsyncResult) -> None:
         try:
@@ -60,7 +57,6 @@ class ClipboardService(GObject.GObject):
         self.emit('paste_from_clipboard', texture)
 
     def read_texture(self) -> None:
-        telemetry.capture('clipboard read texture')
         self.clipboard.read_texture_async(cancellable=None,
                                           callback=self._on_read_texture)
 
diff --git a/frog/services/screenshot_service.py b/frog/services/screenshot_service.py
index cc1d8ac..4d43ffe 100644
--- a/frog/services/screenshot_service.py
+++ b/frog/services/screenshot_service.py
@@ -32,7 +32,6 @@ from gi.repository import GObject, Gio, GLib, Xdp
 from loguru import logger
 
 from frog.config import tessdata_config
-from frog.services.telemetry import telemetry
 
 try:
     from PIL import Image
@@ -83,7 +82,6 @@ class ScreenshotService(GObject.GObject):
 
         If image is not recognized, returns None.
         """
-        telemetry.capture('screenshot capture', {'language': lang})
         self.portal.take_screenshot(
             None,
             Xdp.ScreenshotFlags.INTERACTIVE,
@@ -157,5 +155,4 @@ class ScreenshotService(GObject.GObject):
             self.emit("error", "No text found.")
 
     def capture_cancelled(self, cancellable: Gio.Cancellable) -> None:
-        telemetry.capture('screenshot cancelled')
         self.emit("error", "Cancelled")
diff --git a/frog/services/share_service.py b/frog/services/share_service.py
index 592324a..4f3d0a4 100644
--- a/frog/services/share_service.py
+++ b/frog/services/share_service.py
@@ -31,9 +31,6 @@ from urllib.parse import quote
 from gi.repository import GObject, Gtk
 from loguru import logger
 
-from frog.services.telemetry import telemetry
-
-
 class ShareService(GObject.GObject):
     __gtype_name__ = "ShareService"
 
@@ -57,7 +54,6 @@ class ShareService(GObject.GObject):
         ]
 
     def share(self, provider: str, text: str):
-        telemetry.capture("share", {'provider': provider})
         if not text:
             return
 
diff --git a/frog/services/telemetry.py b/frog/services/telemetry.py
deleted file mode 100644
index bed7179..0000000
--- a/frog/services/telemetry.py
+++ /dev/null
@@ -1,33 +0,0 @@
-from typing import Any
-
-from gi.repository import GObject
-from posthog import Posthog
-
-
-class TelemetryService(GObject.GObject):
-    _gtype_name = 'TelemetryService'
-
-    posthog: Posthog | None
-    installation_id: str | None
-    is_active: bool = True
-
-    def __init__(self):
-        super().__init__()
-        self.posthog = Posthog(project_api_key='phc_HpETCN6yQKZIr8gr6mBQTd3H0SjKUBrNMI3AizoX97f',
-                               host='https://eu.posthog.com')
-
-    def set_installation_id(self, installation_id: str):
-        self.installation_id = installation_id
-
-    def set_is_active(self, is_active: bool):
-        self.is_active = is_active
-
-    def capture(self, event: str, props: Any = None):
-        if self.posthog and self.is_active:
-            self.posthog.capture(self.installation_id, event, props)
-
-    def capture_page_view(self, page_name: str):
-        self.posthog.capture(self.installation_id, '$pageview', {'$current_url': page_name})
-
-
-telemetry = TelemetryService()
diff --git a/frog/widgets/extracted_page.py b/frog/widgets/extracted_page.py
index f6cc41e..0fb2bca 100644
--- a/frog/widgets/extracted_page.py
+++ b/frog/widgets/extracted_page.py
@@ -31,11 +31,8 @@ from loguru import logger
 
 from frog.config import RESOURCE_PREFIX
 from frog.gobject_worker import GObjectWorker
-from frog.services.share_service import ShareService
-from frog.services.telemetry import telemetry
 from frog.services.tts import ttsservice, TTSService
 from frog.settings import Settings
-from frog.widgets.share_row import ShareRow
 
 
 @Gtk.Template(resource_path=f"{RESOURCE_PREFIX}/ui/extracted_page.ui")
@@ -53,7 +50,6 @@ class ExtractedPage(Adw.NavigationPage):
     # listen_btn: Gtk.Button = Gtk.Template.Child()
     # listen_cancel_btn: Gtk.Button = Gtk.Template.Child()
     # listen_spinner: Gtk.Spinner = Gtk.Template.Child()
-    share_list_box: Gtk.ListBox = Gtk.Template.Child()
     grab_btn: Gtk.Button = Gtk.Template.Child()
     text_copy_btn: Gtk.Button = Gtk.Template.Child()
     text_view: Gtk.TextView = Gtk.Template.Child()
@@ -64,11 +60,6 @@ class ExtractedPage(Adw.NavigationPage):
 
         self.settings: Settings = Gtk.Application.get_default().props.settings
 
-        for provider in ShareService.providers():
-            self.share_list_box.append(ShareRow(provider))
-
-        ttsservice.connect("stop", self._on_listen_end)
-
         # self.language_popover.connect('language-changed', self._on_language_changed)
 
         self.settings = Gtk.Application.get_default().props.settings
@@ -85,9 +76,6 @@ class ExtractedPage(Adw.NavigationPage):
         self.buffer.set_text("")
         self.emit("go-back", 1)
 
-    def do_showing(self) -> None:
-        telemetry.capture_page_view('extracted')
-
     @GObject.Property(type=str)
     def extracted_text(self) -> str:
         return self.buffer.get_text(
diff --git a/frog/widgets/language_popover.py b/frog/widgets/language_popover.py
index 007c5d6..ba0e58a 100644
--- a/frog/widgets/language_popover.py
+++ b/frog/widgets/language_popover.py
@@ -31,7 +31,6 @@ from loguru import logger
 
 from frog.config import RESOURCE_PREFIX
 from frog.language_manager import language_manager
-from frog.services.telemetry import telemetry
 from frog.settings import Settings
 from frog.types.language_item import LanguageItem
 from frog.widgets.language_popover_row import LanguagePopoverRow
@@ -71,8 +70,6 @@ class LanguagePopover(Gtk.Popover):
         # self.populate_model()
         self.bind_model()
 
-        self.connect('show', lambda x: telemetry.capture_page_view('language_popover'))
-
     def bind_model(self):
         self.filter = Gtk.CustomFilter()
         self.filter.set_filter_func(self._on_language_filter)
@@ -98,7 +95,6 @@ class LanguagePopover(Gtk.Popover):
 
     @Gtk.Template.Callback()
     def _on_search_activate(self, entry: Gtk.SearchEntry):
-        telemetry.capture('language_search activated')
         self._on_language_activate(self.list_view, 0)
 
     @Gtk.Template.Callback()
@@ -107,7 +103,6 @@ class LanguagePopover(Gtk.Popover):
         self.emit('language-changed', item)
         self.active_language = item.code
         language_manager.active_language = item
-        telemetry.capture('language-activated', {'language': self.active_language})
         self.popdown()
 
     @Gtk.Template.Callback()
diff --git a/frog/widgets/preferences_dialog.py b/frog/widgets/preferences_dialog.py
index 6444a61..06cf9c4 100644
--- a/frog/widgets/preferences_dialog.py
+++ b/frog/widgets/preferences_dialog.py
@@ -29,7 +29,6 @@
 from gi.repository import Gtk, Adw, GObject
 
 from frog.config import RESOURCE_PREFIX
-from frog.services.telemetry import telemetry
 from frog.widgets.preferences_general_page import PreferencesGeneralPage
 from frog.widgets.preferences_languages_page import PreferencesLanguagesPage
 
@@ -44,7 +43,6 @@ class PreferencesDialog(Adw.PreferencesDialog):
     def __init__(self):
         super().__init__()
 
-        self.connect('show', lambda x: telemetry.capture_page_view('preferences'))
 
 
 class LanguageItem(GObject.GObject):
diff --git a/frog/widgets/preferences_general_page.py b/frog/widgets/preferences_general_page.py
index e2c7100..7ee99e2 100644
--- a/frog/widgets/preferences_general_page.py
+++ b/frog/widgets/preferences_general_page.py
@@ -30,7 +30,6 @@ from loguru import logger
 
 from frog.config import RESOURCE_PREFIX
 from frog.language_manager import language_manager
-from frog.services.telemetry import telemetry
 from frog.settings import Settings
 
 
@@ -41,7 +40,6 @@ class PreferencesGeneralPage(Adw.PreferencesPage):
     extra_language_combo: Adw.ComboRow = Gtk.Template.Child()
     autocopy_switch: Gtk.Switch = Gtk.Template.Child()
     autolinks_switch: Gtk.Switch = Gtk.Template.Child()
-    telemetry_switch: Gtk.Switch = Gtk.Template.Child()
 
     def __init__(self):
         super().__init__()
@@ -50,7 +48,6 @@ class PreferencesGeneralPage(Adw.PreferencesPage):
 
         self.settings.bind('autocopy', self.autocopy_switch, 'active', Gio.SettingsBindFlags.DEFAULT)
         self.settings.bind('autolinks', self.autolinks_switch, 'active', Gio.SettingsBindFlags.DEFAULT)
-        self.settings.bind('telemetry', self.telemetry_switch, 'active', Gio.SettingsBindFlags.DEFAULT)
 
         downloaded_langs = language_manager.get_downloaded_languages()
         # Fill second language
@@ -60,9 +57,6 @@ class PreferencesGeneralPage(Adw.PreferencesPage):
         self.extra_language_combo.set_selected(extra_language_index)
         self.extra_language_combo.connect('notify::selected-item', self._on_extra_language_changed)
 
-    def do_show(self, *args, **kwargs):
-        telemetry.capture_page_view('preferences_general')
-
     def _on_extra_language_changed(self, combo_row: Adw.ComboRow, _param):
         lang_name = combo_row.get_selected_item().get_string()
         lang_code = language_manager.get_language_code(lang_name)
diff --git a/frog/widgets/preferences_languages_page.py b/frog/widgets/preferences_languages_page.py
index 9615865..0f02dd0 100644
--- a/frog/widgets/preferences_languages_page.py
+++ b/frog/widgets/preferences_languages_page.py
@@ -32,7 +32,6 @@ from gi.repository import Gtk, Adw, Gio
 
 from frog.config import RESOURCE_PREFIX
 from frog.language_manager import language_manager
-from frog.services.telemetry import telemetry
 from frog.settings import Settings
 from frog.types.language_item import LanguageItem
 from frog.widgets.language_row import LanguageRow
@@ -75,9 +74,6 @@ class PreferencesLanguagesPage(Adw.PreferencesPage):
 
         self.check_connection()
 
-    def do_show(self):
-        telemetry.capture_page_view('preferences_languages')
-
     def check_connection(self):
         # Check for access to GitHub
         if not Gio.NetworkMonitor.get_default().can_reach(Gio.NetworkAddress.new('raw.githubusercontent.com', 443)):
diff --git a/frog/widgets/welcome_page.py b/frog/widgets/welcome_page.py
index fd20c71..b442092 100644
--- a/frog/widgets/welcome_page.py
+++ b/frog/widgets/welcome_page.py
@@ -31,7 +31,6 @@ from gi.repository import Gtk, Gdk
 
 from frog.config import RESOURCE_PREFIX, APP_ID
 from frog.language_manager import language_manager
-from frog.services.telemetry import telemetry
 from frog.types.language_item import LanguageItem
 from frog.widgets.language_popover import LanguagePopover
 
@@ -59,8 +58,6 @@ class WelcomePage(Adw.NavigationPage):
             language_manager.get_language(self.settings.get_string("active-language"))
         )
 
-    def do_showing(self):
-        telemetry.capture_page_view('welcome')
 
     def _on_language_changed(self, _: LanguagePopover, language: LanguageItem):
         self.lang_combo.set_label(language.title)
diff --git a/frog/window.py b/frog/window.py
index 5d1ce2c..d8507a2 100644
--- a/frog/window.py
+++ b/frog/window.py
@@ -39,7 +39,6 @@ from frog.gobject_worker import GObjectWorker
 from frog.language_manager import language_manager
 from frog.services.clipboard_service import clipboard_service, ClipboardService
 from frog.services.screenshot_service import ScreenshotService
-from frog.services.share_service import ShareService
 from frog.widgets.extracted_page import ExtractedPage
 from frog.widgets.list_menu_row import ListMenuRow
 from frog.widgets.preferences_dialog import PreferencesDialog
@@ -81,8 +80,6 @@ class FrogWindow(Adw.ApplicationWindow):
         #
         # self.main_leaflet.append(self.infobar)  # , False, True, 2)
 
-        self.install_action("window.share", "provider", self._on_share)
-
         # Init drag-n-drop controller
         drop_target_main: Gtk.DropTarget = Gtk.DropTarget.new(
             type=Gdk.FileList, actions=Gdk.DragAction.COPY
@@ -300,13 +297,6 @@ class FrogWindow(Adw.ApplicationWindow):
         self.split_view.set_show_content(False)
         self.extracted_page.listen_cancel()
 
-    def _on_share(self, _sender, _action_name: str, provider: GLib.Variant):
-        service = ShareService()
-        provider_name: str = provider.get_string().lower()
-        text = self.extracted_page.extracted_text
-        if provider_name in ShareService.providers() and text:
-            service.share(provider_name, text)
-
     def show_toast(
             self,
             title: str,
